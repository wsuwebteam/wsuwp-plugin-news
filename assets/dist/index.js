(window.webpackJsonp_wsuwp_plugin_news=window.webpackJsonp_wsuwp_plugin_news||[]).push([[1],{9:function(e,t,r){}}]),function(e){function t(t){for(var a,i,o=t[0],c=t[1],l=t[2],h=0,d=[];h<o.length;h++)i=o[h],Object.prototype.hasOwnProperty.call(n,i)&&n[i]&&d.push(n[i][0]),n[i]=0;for(a in c)Object.prototype.hasOwnProperty.call(c,a)&&(e[a]=c[a]);for(m&&m(t);d.length;)d.shift()();return s.push.apply(s,l||[]),r()}function r(){for(var e,t=0;t<s.length;t++){for(var r=s[t],a=!0,o=1;o<r.length;o++){var c=r[o];0!==n[c]&&(a=!1)}a&&(s.splice(t--,1),e=i(i.s=r[0]))}return e}var a={},n={0:0},s=[];function i(t){if(a[t])return a[t].exports;var r=a[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=a,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)i.d(r,a,function(t){return e[t]}.bind(null,a));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="";var o=window.webpackJsonp_wsuwp_plugin_news=window.webpackJsonp_wsuwp_plugin_news||[],c=o.push.bind(o);o.push=t,o=o.slice();for(var l=0;l<o.length;l++)t(o[l]);var m=c;s.push([10,1]),r()}([function(e,t){e.exports=window.wp.element},function(e,t){e.exports=window.lodash},function(e,t){e.exports=window.wp.i18n},function(e,t){e.exports=window.wp.components},function(e,t){e.exports=window.wp.apiFetch},function(e,t){e.exports=window.wp.data},function(e,t){e.exports=window.wp.compose},function(e,t){e.exports=window.wp.url},function(e,t){e.exports=window.React},,function(e,t,r){"use strict";r.r(t);var a={};r.r(a),r.d(a,"media_contact",(function(){return b}));var n=r(0),s=r(1),i=r(2),o=r(3),c=r(5),l=r(6),m=r(4),h=r.n(m),d=r(7);function p(e){const t=e.map(e=>({children:[],parent:null,...e})),r=Object(s.groupBy)(t,"parent");if(r.null&&r.null.length)return t;const a=e=>e.map(e=>{const t=r[e.id];return{...e,children:t&&t.length?a(t):[]}});return a(r[0]||[])}var u=r(8),b=Object(u.forwardRef)((function(e,t){const[r,a]=Object(n.useState)(e.defaultValue),i=e=>{const t=e.target.name,r=e.target.value;a(""===r?e=>Object(s.omit)(e,t):e=>({...e,[t]:r}))};return Object(n.useEffect)(()=>{Object(s.isEmpty)(r)||e.onChange(r)},[r]),Object(u.useImperativeHandle)(t,()=>({clearMetaData(){a({})}})),Object(n.createElement)(n.Fragment,null,Object(n.createElement)("label",{htmlFor:"editor-post-taxonomies__hierarchical-terms-organization-"+e.instanceId,className:"editor-post-taxonomies__hierarchical-terms-label"},"Organization/Affiliation"),Object(n.createElement)("input",{name:"organization",type:"text",id:"editor-post-taxonomies__hierarchical-terms-organization-"+e.instanceId,className:"editor-post-taxonomies__hierarchical-terms-input",value:r.organization||"",onChange:i}),Object(n.createElement)("label",{htmlFor:"editor-post-taxonomies__hierarchical-terms-email-"+e.instanceId,className:"editor-post-taxonomies__hierarchical-terms-label"},"Email"),Object(n.createElement)("input",{name:"email",type:"text",id:"editor-post-taxonomies__hierarchical-terms-email-"+e.instanceId,className:"editor-post-taxonomies__hierarchical-terms-input",value:r.email||"",onChange:i}),Object(n.createElement)("label",{htmlFor:"editor-post-taxonomies__hierarchical-terms-phone-"+e.instanceId,className:"editor-post-taxonomies__hierarchical-terms-label"},"Phone Number"),Object(n.createElement)("input",{name:"phone_number",type:"text",id:"editor-post-taxonomies__hierarchical-terms-phone-"+e.instanceId,className:"editor-post-taxonomies__hierarchical-terms-input",value:r.phone_number||"",onChange:i}))}));const f={per_page:10,orderby:"name",order:"asc",_fields:"id,name,parent"};class g extends n.Component{constructor(){super(...arguments),this.findTerm=this.findTerm.bind(this),this.onChange=this.onChange.bind(this),this.onChangeFormName=this.onChangeFormName.bind(this),this.onChangeFormDescription=this.onChangeFormDescription.bind(this),this.onChangeFormMeta=this.onChangeFormMeta.bind(this),this.onChangeFormParent=this.onChangeFormParent.bind(this),this.onAddTerm=this.onAddTerm.bind(this),this.onToggleForm=this.onToggleForm.bind(this),this.setFilterValue=this.setFilterValue.bind(this),this.sortBySelected=this.sortBySelected.bind(this),this.state={loading:!0,availableTermsTree:[],availableTerms:[],adding:!1,formName:"",formDescription:"",formMeta:{},formParent:"",showForm:!1,filterValue:"",filteredTermsTree:[]},this.metaFields=React.createRef()}onChange(e){const{onUpdateTerms:t,terms:r=[],taxonomy:a}=this.props;t(-1!==r.indexOf(e)?Object(s.without)(r,e):[...r,e],a.rest_base)}onChangeFormName(e){const t=""===e.target.value.trim()?"":e.target.value;this.setState({formName:t})}onChangeFormDescription(e){const t=""===e.target.value.trim()?"":e.target.value;this.setState({formDescription:t})}onChangeFormMeta(e){this.setState({formMeta:e})}onChangeFormParent(e){this.setState({formParent:e})}onToggleForm(){this.setState(e=>({showForm:!e.showForm}))}findTerm(e,t,r){return Object(s.find)(e,e=>(!e.parent&&!t||parseInt(e.parent)===parseInt(t))&&e.name.toLowerCase()===r.toLowerCase())}onAddTerm(e){e.preventDefault();const{onUpdateTerms:t,taxonomy:r,terms:a,slug:n}=this.props,{formName:o,formDescription:c,formMeta:l,formParent:m,adding:u,availableTerms:b}=this.state;if(""===o||u)return;const g=this.findTerm(b,m,o);if(g)return Object(s.some)(a,e=>e===g.id)||t([...a,g.id],r.rest_base),this.setState({formName:"",formParent:"",formDescription:"",formMeta:{}}),this.metaFields.current.clearMetaData(),void this.onToggleForm();this.setState({adding:!0}),console.log(l),this.addRequest=h()({path:"/wp/v2/"+r.rest_base,method:"POST",data:{name:o,parent:m||void 0,description:c||void 0,meta:l||void 0}}),this.addRequest.catch(e=>"term_exists"===e.code?(this.addRequest=h()({path:Object(d.addQueryArgs)("/wp/v2/"+r.rest_base,{...f,parent:m||0,search:o})}),this.addRequest.then(e=>this.findTerm(e,m,o))):Promise.reject(e)).then(e=>{const o=Object(s.find)(this.state.availableTerms,t=>t.id===e.id)?this.state.availableTerms:[e,...this.state.availableTerms],c=Object(i.sprintf)(
/* translators: %s: taxonomy name */
Object(i._x)("%s added","term"),Object(s.get)(this.props.taxonomy,["labels","singular_name"],"category"===n?Object(i.__)("Category"):Object(i.__)("Term")));this.props.speak(c,"assertive"),this.addRequest=null,this.setState({adding:!1,formName:"",formParent:"",formDescription:"",formMeta:{},availableTerms:o,availableTermsTree:this.sortBySelected(p(o))}),this.metaFields.current.clearMetaData(),this.onToggleForm(),t([...a,e.id],r.rest_base)},e=>{"abort"!==e.statusText&&(this.addRequest=null,this.setState({adding:!1}))})}componentDidMount(){this.fetchTerms()}componentWillUnmount(){Object(s.invoke)(this.fetchRequest,["abort"]),Object(s.invoke)(this.addRequest,["abort"])}componentDidUpdate(e){this.props.taxonomy!==e.taxonomy&&this.fetchTerms()}fetchTerms(){const{taxonomy:e}=this.props;e&&(this.fetchRequest=h()({path:Object(d.addQueryArgs)("/wp/v2/"+e.rest_base,f)}),this.fetchRequest.then(e=>{const t=this.sortBySelected(p(e));this.fetchRequest=null,this.setState({loading:!1,availableTermsTree:t,availableTerms:e})},e=>{"abort"!==e.statusText&&(this.fetchRequest=null,this.setState({loading:!1}))}))}sortBySelected(e){const{terms:t}=this.props,r=e=>-1!==t.indexOf(e.id)||void 0!==e.children&&!!(e.children.map(r).filter(e=>e).length>0);return e.sort((e,t)=>{const a=r(e),n=r(t);return a===n?0:a&&!n?-1:!a&&n?1:0}),e}setFilterValue(e){const{availableTermsTree:t}=this.state,r=e.target.value,a=t.map(this.getFilterMatcher(r)).filter(e=>e),n=e=>{let t=0;for(let r=0;r<e.length;r++)t++,void 0!==e[r].children&&(t+=n(e[r].children));return t};this.setState({filterValue:r,filteredTermsTree:a});const s=n(a),o=Object(i.sprintf)(
/* translators: %d: number of results */
Object(i._n)("%d result found.","%d results found.",s),s);this.props.debouncedSpeak(o,"assertive")}getFilterMatcher(e){const t=r=>{if(""===e)return r;const a={...r};return a.children.length>0&&(a.children=a.children.map(t).filter(e=>e)),(-1!==a.name.toLowerCase().indexOf(e.toLowerCase())||a.children.length>0)&&a};return t}renderTerms(e){const{terms:t=[]}=this.props;return e.map(e=>Object(n.createElement)("div",{key:e.id,className:"editor-post-taxonomies__hierarchical-terms-choice"},Object(n.createElement)(o.CheckboxControl,{checked:-1!==t.indexOf(e.id),onChange:()=>{const t=parseInt(e.id,10);this.onChange(t)},label:Object(s.unescape)(e.name)}),!!e.children.length&&Object(n.createElement)("div",{className:"editor-post-taxonomies__hierarchical-terms-subchoices"},this.renderTerms(e.children))))}render(){const{slug:e,taxonomy:t,instanceId:r,hasCreateAction:c,hasAssignAction:l}=this.props;if(!l)return null;const{availableTermsTree:m,availableTerms:h,filteredTermsTree:d,formName:p,formDescription:u,formParent:b,loading:f,showForm:g,filterValue:_}=this.state,w=(r,a,n)=>Object(s.get)(t,["labels",r],"category"===e?a:n),O=w("add_new_item",Object(i.__)("Add new category"),Object(i.__)("Add new term")),j=w("new_item_name",Object(i.__)("Add new category"),Object(i.__)("Add new term")),x=w("parent_item",Object(i.__)("Parent Category"),Object(i.__)("Parent Term")),v=`— ${x} —`,T=O,y="editor-post-taxonomies__hierarchical-terms-input-"+r,F="editor-post-taxonomies__hierarchical-terms-filter-"+r,C=Object(s.get)(this.props.taxonomy,["labels","search_items"],Object(i.__)("Search Terms")),S=Object(s.get)(this.props.taxonomy,["name"],Object(i.__)("Terms")),E=h.length>=8,N=a[t.slug];return[E&&Object(n.createElement)("label",{key:"filter-label",htmlFor:F},C),E&&Object(n.createElement)("input",{type:"search",id:F,value:_,onChange:this.setFilterValue,className:"editor-post-taxonomies__hierarchical-terms-filter",key:"term-filter-input"}),Object(n.createElement)("div",{className:"editor-post-taxonomies__hierarchical-terms-list",key:"term-list",tabIndex:"0",role:"group","aria-label":S},this.renderTerms(""!==_?d:m)),!f&&c&&Object(n.createElement)(o.Button,{key:"term-add-button",onClick:this.onToggleForm,className:"editor-post-taxonomies__hierarchical-terms-add","aria-expanded":g,isLink:!0},O),g&&Object(n.createElement)(o.Modal,{key:"hierarchical-terms-form",title:"Add New "+t.labels.singular_name,onRequestClose:this.onToggleForm},Object(n.createElement)("form",{onSubmit:this.onAddTerm},Object(n.createElement)("label",{htmlFor:y,className:"editor-post-taxonomies__hierarchical-terms-label"},j),Object(n.createElement)("input",{type:"text",id:y,className:"editor-post-taxonomies__hierarchical-terms-input",value:p,onChange:this.onChangeFormName,required:!0}),Object(n.createElement)("label",{htmlFor:"editor-post-taxonomies__hierarchical-terms-description-"+r,className:"editor-post-taxonomies__hierarchical-terms-label"},"Description"),Object(n.createElement)("textarea",{id:"editor-post-taxonomies__hierarchical-terms-description-"+r,className:"editor-post-taxonomies__hierarchical-terms-input",value:u,onChange:this.onChangeFormDescription}),Object(n.createElement)(N,{ref:this.metaFields,onChange:this.onChangeFormMeta,instanceId:r,defaultValue:this.state.formMeta}),!!h.length&&t.hierarchical&&Object(n.createElement)(o.TreeSelect,{className:"wsu-custom-term-selector__tree-select",label:x,noOptionLabel:v,onChange:this.onChangeFormParent,selectedId:b,tree:m}),Object(n.createElement)(o.Button,{isSecondary:!0,type:"submit",className:"editor-post-taxonomies__hierarchical-terms-submit wsu-custom-term-selector__hierarchical-terms-submit"},T)))]}}var _=Object(l.compose)([Object(c.withSelect)((e,{slug:t})=>{const{getCurrentPost:r}=e("core/editor"),{getTaxonomy:a}=e("core"),n=a(t);return{hasCreateAction:!!n&&Object(s.get)(r(),["_links","wp:action-create-"+n.rest_base],!1),hasAssignAction:!!n&&Object(s.get)(r(),["_links","wp:action-assign-"+n.rest_base],!1),terms:n?e("core/editor").getEditedPostAttribute(n.rest_base):[],taxonomy:n}}),Object(c.withDispatch)(e=>({onUpdateTerms(t,r){e("core/editor").editPost({[r]:t})}})),o.withSpokenMessages,l.withInstanceId])(g);wp.hooks.addFilter("editor.PostTaxonomyType","wsuwp-plugin-news",(function(e){const t=["media_contact"];return function(r){return t.includes(r.slug)?Object(n.createElement)(_,r):Object(n.createElement)(e,r)}})),r(9)}]);